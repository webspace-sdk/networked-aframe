"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.DocSyncRequestT = exports.DocSyncRequest = void 0;
var flatbuffers = require("flatbuffers");
var DocSyncRequest = /** @class */ (function () {
    function DocSyncRequest() {
        this.bb = null;
        this.bb_pos = 0;
    }
    DocSyncRequest.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    DocSyncRequest.getRootAsDocSyncRequest = function (bb, obj) {
        return (obj || new DocSyncRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    DocSyncRequest.getSizePrefixedRootAsDocSyncRequest = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new DocSyncRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    DocSyncRequest.prototype.encodedStateVector = function (index) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
    };
    DocSyncRequest.prototype.encodedStateVectorLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    DocSyncRequest.prototype.encodedStateVectorArray = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
    };
    DocSyncRequest.startDocSyncRequest = function (builder) {
        builder.startObject(1);
    };
    DocSyncRequest.addEncodedStateVector = function (builder, encodedStateVectorOffset) {
        builder.addFieldOffset(0, encodedStateVectorOffset, 0);
    };
    DocSyncRequest.createEncodedStateVectorVector = function (builder, data) {
        builder.startVector(1, data.length, 1);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addInt8(data[i]);
        }
        return builder.endVector();
    };
    DocSyncRequest.startEncodedStateVectorVector = function (builder, numElems) {
        builder.startVector(1, numElems, 1);
    };
    DocSyncRequest.endDocSyncRequest = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    DocSyncRequest.createDocSyncRequest = function (builder, encodedStateVectorOffset) {
        DocSyncRequest.startDocSyncRequest(builder);
        DocSyncRequest.addEncodedStateVector(builder, encodedStateVectorOffset);
        return DocSyncRequest.endDocSyncRequest(builder);
    };
    DocSyncRequest.prototype.unpack = function () {
        return new DocSyncRequestT(this.bb.createScalarList(this.encodedStateVector.bind(this), this.encodedStateVectorLength()));
    };
    DocSyncRequest.prototype.unpackTo = function (_o) {
        _o.encodedStateVector = this.bb.createScalarList(this.encodedStateVector.bind(this), this.encodedStateVectorLength());
    };
    return DocSyncRequest;
}());
exports.DocSyncRequest = DocSyncRequest;
var DocSyncRequestT = /** @class */ (function () {
    function DocSyncRequestT(encodedStateVector) {
        if (encodedStateVector === void 0) { encodedStateVector = []; }
        this.encodedStateVector = encodedStateVector;
    }
    DocSyncRequestT.prototype.pack = function (builder) {
        var encodedStateVector = DocSyncRequest.createEncodedStateVectorVector(builder, this.encodedStateVector);
        return DocSyncRequest.createDocSyncRequest(builder, encodedStateVector);
    };
    return DocSyncRequestT;
}());
exports.DocSyncRequestT = DocSyncRequestT;
