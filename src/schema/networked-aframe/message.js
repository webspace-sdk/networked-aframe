"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.Message = void 0;
var flatbuffers = require("flatbuffers");
var delete_op_1 = require("../networked-aframe/delete-op");
var update_op_1 = require("../networked-aframe/update-op");
var Message = /** @class */ (function () {
    function Message() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Message.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Message.getRootAsMessage = function (bb, obj) {
        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Message.getSizePrefixedRootAsMessage = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Message.prototype.updates = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? (obj || new update_op_1.UpdateOp()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    Message.prototype.updatesLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    Message.prototype.deletes = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? (obj || new delete_op_1.DeleteOp()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    Message.prototype.deletesLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    Message.startMessage = function (builder) {
        builder.startObject(2);
    };
    Message.addUpdates = function (builder, updatesOffset) {
        builder.addFieldOffset(0, updatesOffset, 0);
    };
    Message.createUpdatesVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    Message.startUpdatesVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    Message.addDeletes = function (builder, deletesOffset) {
        builder.addFieldOffset(1, deletesOffset, 0);
    };
    Message.createDeletesVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    Message.startDeletesVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    Message.endMessage = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    Message.finishMessageBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    Message.finishSizePrefixedMessageBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    Message.createMessage = function (builder, updatesOffset, deletesOffset) {
        Message.startMessage(builder);
        Message.addUpdates(builder, updatesOffset);
        Message.addDeletes(builder, deletesOffset);
        return Message.endMessage(builder);
    };
    return Message;
}());
exports.Message = Message;
