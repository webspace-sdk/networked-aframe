"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.MessageT = exports.Message = void 0;
var flatbuffers = require("flatbuffers");
var message_data_1 = require("../networked-aframe/message-data");
var Message = /** @class */ (function () {
    function Message() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Message.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Message.getRootAsMessage = function (bb, obj) {
        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Message.getSizePrefixedRootAsMessage = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Message.prototype.dataType = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : message_data_1.MessageData.NONE;
    };
    Message.prototype.data = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
    };
    Message.startMessage = function (builder) {
        builder.startObject(2);
    };
    Message.addDataType = function (builder, dataType) {
        builder.addFieldInt8(0, dataType, message_data_1.MessageData.NONE);
    };
    Message.addData = function (builder, dataOffset) {
        builder.addFieldOffset(1, dataOffset, 0);
    };
    Message.endMessage = function (builder) {
        var offset = builder.endObject();
        builder.requiredField(offset, 6); // data
        return offset;
    };
    Message.finishMessageBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    Message.finishSizePrefixedMessageBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    Message.createMessage = function (builder, dataType, dataOffset) {
        Message.startMessage(builder);
        Message.addDataType(builder, dataType);
        Message.addData(builder, dataOffset);
        return Message.endMessage(builder);
    };
    Message.prototype.unpack = function () {
        var _this = this;
        return new MessageT(this.dataType(), (function () {
            var temp = (0, message_data_1.unionToMessageData)(_this.dataType(), _this.data.bind(_this));
            if (temp === null) {
                return null;
            }
            return temp.unpack();
        })());
    };
    Message.prototype.unpackTo = function (_o) {
        var _this = this;
        _o.dataType = this.dataType();
        _o.data = (function () {
            var temp = (0, message_data_1.unionToMessageData)(_this.dataType(), _this.data.bind(_this));
            if (temp === null) {
                return null;
            }
            return temp.unpack();
        })();
    };
    return Message;
}());
exports.Message = Message;
var MessageT = /** @class */ (function () {
    function MessageT(dataType, data) {
        if (dataType === void 0) { dataType = message_data_1.MessageData.NONE; }
        if (data === void 0) { data = null; }
        this.dataType = dataType;
        this.data = data;
    }
    MessageT.prototype.pack = function (builder) {
        var data = builder.createObjectOffset(this.data);
        return Message.createMessage(builder, this.dataType, data);
    };
    return MessageT;
}());
exports.MessageT = MessageT;
