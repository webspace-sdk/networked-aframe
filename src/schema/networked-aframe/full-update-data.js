"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.FullUpdateDataT = exports.FullUpdateData = void 0;
var flatbuffers = require("flatbuffers");
var FullUpdateData = /** @class */ (function () {
    function FullUpdateData() {
        this.bb = null;
        this.bb_pos = 0;
    }
    FullUpdateData.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    FullUpdateData.getRootAsFullUpdateData = function (bb, obj) {
        return (obj || new FullUpdateData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FullUpdateData.getSizePrefixedRootAsFullUpdateData = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new FullUpdateData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    FullUpdateData.prototype.creator = function (index) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
    };
    FullUpdateData.prototype.creatorLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    FullUpdateData.prototype.creatorArray = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
    };
    FullUpdateData.prototype.template = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    FullUpdateData.prototype.persistent = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    };
    FullUpdateData.prototype.parentId = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    FullUpdateData.startFullUpdateData = function (builder) {
        builder.startObject(4);
    };
    FullUpdateData.addCreator = function (builder, creatorOffset) {
        builder.addFieldOffset(0, creatorOffset, 0);
    };
    FullUpdateData.createCreatorVector = function (builder, data) {
        builder.startVector(1, data.length, 1);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addInt8(data[i]);
        }
        return builder.endVector();
    };
    FullUpdateData.startCreatorVector = function (builder, numElems) {
        builder.startVector(1, numElems, 1);
    };
    FullUpdateData.addTemplate = function (builder, templateOffset) {
        builder.addFieldOffset(1, templateOffset, 0);
    };
    FullUpdateData.addPersistent = function (builder, persistent) {
        builder.addFieldInt8(2, +persistent, +false);
    };
    FullUpdateData.addParentId = function (builder, parentIdOffset) {
        builder.addFieldOffset(3, parentIdOffset, 0);
    };
    FullUpdateData.endFullUpdateData = function (builder) {
        var offset = builder.endObject();
        builder.requiredField(offset, 4); // creator
        builder.requiredField(offset, 6); // template
        return offset;
    };
    FullUpdateData.createFullUpdateData = function (builder, creatorOffset, templateOffset, persistent, parentIdOffset) {
        FullUpdateData.startFullUpdateData(builder);
        FullUpdateData.addCreator(builder, creatorOffset);
        FullUpdateData.addTemplate(builder, templateOffset);
        FullUpdateData.addPersistent(builder, persistent);
        FullUpdateData.addParentId(builder, parentIdOffset);
        return FullUpdateData.endFullUpdateData(builder);
    };
    FullUpdateData.prototype.unpack = function () {
        return new FullUpdateDataT(this.bb.createScalarList(this.creator.bind(this), this.creatorLength()), this.template(), this.persistent(), this.parentId());
    };
    FullUpdateData.prototype.unpackTo = function (_o) {
        _o.creator = this.bb.createScalarList(this.creator.bind(this), this.creatorLength());
        _o.template = this.template();
        _o.persistent = this.persistent();
        _o.parentId = this.parentId();
    };
    return FullUpdateData;
}());
exports.FullUpdateData = FullUpdateData;
var FullUpdateDataT = /** @class */ (function () {
    function FullUpdateDataT(creator, template, persistent, parentId) {
        if (creator === void 0) { creator = []; }
        if (template === void 0) { template = null; }
        if (persistent === void 0) { persistent = false; }
        if (parentId === void 0) { parentId = null; }
        this.creator = creator;
        this.template = template;
        this.persistent = persistent;
        this.parentId = parentId;
    }
    FullUpdateDataT.prototype.pack = function (builder) {
        var creator = FullUpdateData.createCreatorVector(builder, this.creator);
        var template = (this.template !== null ? builder.createString(this.template) : 0);
        var parentId = (this.parentId !== null ? builder.createString(this.parentId) : 0);
        return FullUpdateData.createFullUpdateData(builder, creator, template, this.persistent, parentId);
    };
    return FullUpdateDataT;
}());
exports.FullUpdateDataT = FullUpdateDataT;
