"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.PartialUpdateOp = void 0;
var flatbuffers = require("flatbuffers");
var component_1 = require("../networked-aframe/component");
var PartialUpdateOp = /** @class */ (function () {
    function PartialUpdateOp() {
        this.bb = null;
        this.bb_pos = 0;
    }
    PartialUpdateOp.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    PartialUpdateOp.getRootAsPartialUpdateOp = function (bb, obj) {
        return (obj || new PartialUpdateOp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PartialUpdateOp.getSizePrefixedRootAsPartialUpdateOp = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new PartialUpdateOp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    PartialUpdateOp.prototype.components = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? (obj || new component_1.Component()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    PartialUpdateOp.prototype.componentsLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    PartialUpdateOp.startPartialUpdateOp = function (builder) {
        builder.startObject(1);
    };
    PartialUpdateOp.addComponents = function (builder, componentsOffset) {
        builder.addFieldOffset(0, componentsOffset, 0);
    };
    PartialUpdateOp.createComponentsVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    PartialUpdateOp.startComponentsVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    PartialUpdateOp.endPartialUpdateOp = function (builder) {
        var offset = builder.endObject();
        builder.requiredField(offset, 4); // components
        return offset;
    };
    PartialUpdateOp.createPartialUpdateOp = function (builder, componentsOffset) {
        PartialUpdateOp.startPartialUpdateOp(builder);
        PartialUpdateOp.addComponents(builder, componentsOffset);
        return PartialUpdateOp.endPartialUpdateOp(builder);
    };
    return PartialUpdateOp;
}());
exports.PartialUpdateOp = PartialUpdateOp;
